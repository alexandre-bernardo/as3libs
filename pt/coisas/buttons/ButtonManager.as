///////////////////////////////////////////////////////////
//  ButtonManager.as
//  Macromedia ActionScript Implementation of the Class ButtonManager
//  Generated by Enterprise Architect
//  Created on:      24-Aug-2010 17:53:56
//  Original author: Alexandre
///////////////////////////////////////////////////////////

package pt.coisas.buttons {
	import flash.events.MouseEvent;

	/**
	 * @author Alexandre
	 * @version 1.0
	 * @created 24-Aug-2010 17:53:56
	 */
	dynamic public class ButtonManager {
		private var buttons:Vector.<StateButton>;
		
	public function ButtonManager(buttons:Vector.<StateButton> = null) {
			if(buttons){
				this.buttons = buttons;
				for each (var button:StateButton in buttons) {
					button.addEventListener(MouseEvent.MOUSE_DOWN, buttonHandler, false, 0, true);
				}
			} else this.buttons = new Vector.<StateButton>();
		}
		
		public function addButton(button:StateButton):void {
			button.addEventListener(MouseEvent.MOUSE_DOWN, buttonHandler, false, 0, true);
			buttons.push(button);
		}
		
		public function removeButton(button:StateButton):void {
			buttons.splice(buttons.indexOf(button), 1);
			button.removeEventListener(MouseEvent.MOUSE_DOWN, buttonHandler);
		}
		
		private function buttonHandler(e:MouseEvent):void {
			for each (var button:StateButton in buttons) {
				if(e.currentTarget != button && button.selected){ //is selected
					button.dispatchEvent(new ButtonEvent(ButtonEvent.RELEASE, button.group_id, false));
				}
			}
		}
		public function destroy():void {
			while (buttons.length > 0) {
				removeButton(buttons[0]);
			}
			buttons = null;
		}
	}//end ButtonManager
}