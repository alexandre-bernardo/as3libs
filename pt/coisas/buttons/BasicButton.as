///////////////////////////////////////////////////////////
//  BasicButton.as
//  Macromedia ActionScript Implementation of the Class BasicButton
//  Generated by Enterprise Architect
//  Created on:      13-Jul-2009 17:53:56
//  Original author: Alexandre
///////////////////////////////////////////////////////////

package pt.coisas.buttons {
	import flash.display.Sprite;
	import flash.events.MouseEvent;
	/**
	 * @author Alexandre
	 * @version 1.0
	 * @created 13-Jul-2009 17:53:56
	 */
	dynamic public class BasicButton extends Sprite {
		public var _hitArea:Sprite; //TODO check...
		
		private var _disabled:Boolean = false;
		
		public function BasicButton() {
			(_hitArea ? _hitArea : this).buttonMode = true;
			(_hitArea ? _hitArea : this).mouseChildren = false;
		}
		public function setStates(buttonDown:Function, buttonOver:Function, buttonOut:Function, buttonUp:Function = null):void {
			setDown(buttonDown);
			setOver(buttonOver);
			setOut(buttonOut);
			if(!(buttonUp == null)) setUp(buttonUp);
		}
		public function removeStates(buttonDown:Function, buttonOver:Function, buttonOut:Function, buttonUp:Function = null):void {
			(_hitArea ? _hitArea : this).removeEventListener(MouseEvent.MOUSE_DOWN, buttonDown);
			(_hitArea ? _hitArea : this).removeEventListener(MouseEvent.MOUSE_OVER, buttonOver);
			(_hitArea ? _hitArea : this).removeEventListener(MouseEvent.MOUSE_OUT, buttonOut);
			if(!(buttonUp == null)) (_hitArea ? _hitArea : this).removeEventListener(MouseEvent.MOUSE_UP, buttonUp);
		}
		public function setDown(buttonDown:Function):void {
			(_hitArea ? _hitArea : this).addEventListener(MouseEvent.MOUSE_DOWN, buttonDown, false, 0, true);
		}
		public function removeDown(buttonDown:Function):void {
			(_hitArea ? _hitArea : this).removeEventListener(MouseEvent.MOUSE_DOWN, buttonDown);
		}
		public function setOver(buttonOver:Function):void {
			(_hitArea ? _hitArea : this).addEventListener(MouseEvent.MOUSE_OVER, buttonOver, false, 0, true);
		}
		public function removeOver(buttonOver:Function):void {
			(_hitArea ? _hitArea : this).removeEventListener(MouseEvent.MOUSE_OVER, buttonOver);
		}
		public function setOut(buttonOut:Function):void {
			(_hitArea ? _hitArea : this).addEventListener(MouseEvent.MOUSE_OUT, buttonOut, false, 0, true);
		}
		public function removeOut(buttonOut:Function):void {
			(_hitArea ? _hitArea : this).removeEventListener(MouseEvent.MOUSE_OUT, buttonOut);
		}
		public function setUp(buttonUp:Function):void {
			(_hitArea ? _hitArea : this).addEventListener(MouseEvent.MOUSE_UP, buttonUp, false, 0, true);
		}
		public function removeUp(buttonUp:Function):void {
			(_hitArea ? _hitArea : this).removeEventListener(MouseEvent.MOUSE_UP, buttonUp);
		}
		
		public function get disabled():Boolean { return _disabled; }
		
		public function enable(anim:Function = null):void {
			this.mouseEnabled = true;
			(_hitArea ? _hitArea : this).buttonMode = true;
			_disabled = false;
			if (anim != null) anim();
			else this.alpha = 1; //default
		}
		public function disable(anim:Function = null):void {
			this.mouseEnabled = false;
			(_hitArea ? _hitArea : this).buttonMode = false;
			_disabled = true;
			if (anim != null) anim();
			else this.alpha = 0.6; //default
		}
	}//end BasicButton
}